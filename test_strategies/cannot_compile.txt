class Player
  attr_reader :name
  attr_accessor :manual
  def initialize (name, manual = false)
    puts "Cannot compile strategy!"
    @name = name
    @manual = manual
    @lastsample = [1, 0]
    reset
  end


  # Задание 28 place_strategy ship_list
  def place_strategy ship_list
    tmp_field = Field.new
    dirs = [true, false]
    res = []
    (ship_list.sort {|x,y| y[1] <=> x[1]}).each do |s|
      [0], p[1], hor, s[0])
          res.push [s[0], p[0], p[1], hor]
          flag = true
        end
      end
    end
    res
  end

  # Задание 29 hit message
  #            m
  # Задание 30 shot_strategy
  def shot_strategy
    if @manual
      @lastshots

        end
      end
      if shot.any? {|a| a == -1}
        @manual = false
        shot_strategy
      else
        @shot = shot
      end
    else
      if @lastshots.length == 0 || @lastshots[-1][1][0,6] == "killed"
        @shot = random_point
      else
        if @lastshots.length == 1 || @lastshots[-2][1][0,6] == "killed"
          @lastsample = [[0,1],[0,-1],[1,0],[-1,0]].sample
        endt.all? {|x| x.between?(0, Field.size-1)}
          @lastsample = @lastsample.map {|x| -x}
          @shot = (@lastshots[-1][0]).add @lastsample
        end
      end
      end
    end
  end

  # Заданиealth"
      tmp_field = Field.new
      names = ("0".."9").to_a + ("A".."Z").to_a + ("a".."z").to_a
      ship_hash = {}
      remains.each do |ship|
        name = names[ship[0]]
        x = ship[1][0]; y = ship[1][1]
        hor = (ship[1][1] == ship[1][3])
        ship_has

        if !ship_hash[name] then break end
        move = 0
        begin
          m1 - forward/any - backward): "; dir = gets.to_i
        else

      if !ship_hash[name]
        @manual = false
        ship_move_strategy remains
      el
      weakest = (remains.sort {|a, b| a[3] <=> b[3]})[0]
      move = (0..3).to_a.sample
      point = (1..weakest[2]).to_a.sample
      [weakest[0], move, point]
    end
  end
end